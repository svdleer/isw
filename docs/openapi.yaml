openapi: 3.0.3
info:
  title: ISW CMDB REST API
  description: |
    A PHP REST API for querying a MySQL CMDB database with support for hostname and IP address searches using API key authentication.
    
    ## Authentication
    All API endpoints require HTTP Basic Authentication.
    
    Authentication header format:
    ```
    Authorization: Basic base64(username:password)
    ```
    
    Example:
    ```
    Authorization: Basic YWRtaW46cGFzc3dvcmQ=  (for username 'admin', password 'password')
    ```
    
    ## Hostname Search Format
    Hostnames should contain "CCAP" and can be searched with wildcards.
    
    Typical format: `4char-2char4num-CCAPxxx`
    - 4char: 2 letters (a-z, case insensitive)  
    - 2char4num: 2 letters followed by 4 numbers
    - CCAPxxx: Must contain "CCAP"
    
    Examples:
    - `GV-RC0011-CCAP003` (exact search)
    - `*CCAP*` or `%CCAP%` (wildcard search for all CCAP devices)
    - `*` or `%` (searches for all hostnames containing "CCAP")
    
    ## IP Address Search
    Supports standard IPv4 addresses with optional wildcards.
    
    IP Address Requirements:
    - Must be valid IPv4 format (xxx.xxx.xxx.xxx) where each octet is 0-255
    - Cannot contain leading zeros (e.g., 192.168.01.1 is invalid)
    - Each octet can be replaced with a wildcard (* or %)
    
    Examples:
    - `192.168.1.100` (exact search)
    - `192.168.1.*` or `192.168.1.%` (wildcard search)
    
    Invalid Examples:
    - `192.168.1` (too few octets)
    - `192.168.1.256` (octet value too large)
    - `192.168.1.1.1` (too many octets)
    - `192.168.01.1` (leading zeros not allowed)
  version: 1.0.0
  contact:
    name: ISW CMDB API Support
    email: admin@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost/isw
    description: Development server
  - url: https://your-domain.com/isw
    description: Production server

security:
  - BasicAuth: []

paths:
  /api/search:
    get:
      summary: Search devices (GET method)
      description: Search for devices by hostname or IP address with optional wildcard support using query parameters
      operationId: searchDevicesGet
    post:
      summary: Search devices (POST method)
      description: Search for devices by hostname or IP address with JSON request body
      operationId: searchDevicesPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Header:
                  type: object
                  properties:
                    BusinessTransactionID:
                      type: string
                      example: "1"
                    SentTimestamp:
                      type: string
                      format: date-time
                      example: "2023-11-10T09:20:00"
                    SourceContext:
                      type: object
                      properties:
                        host:
                          type: string
                        application:
                          type: string
                Body:
                  type: object
                  oneOf:
                    - properties:
                        HostName:
                          type: string
                          example: "GV-RC0052-CCAP002"
                    - properties:
                        IPAddress:
                          type: string
                          example: "172.16.55.26"
      responses:
        '200':
          description: Successful response with device data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  search_type:
                    type: string
                    enum: [hostname, ip]
                    example: hostname
                  query:
                    type: string
                    example: GV-RC0052-CCAP002
                  count:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Device'
                  request:
                    type: object
                    properties:
                      header:
                        type: object
                      body:
                        type: object
      parameters:
        - name: type
          in: query
          required: true
          description: Type of search to perform
          schema:
            type: string
            enum: [hostname, ip]
          example: hostname
        - name: q
          in: query
          required: true
          description: Search query string
          schema:
            type: string
          examples:
            hostname_exact:
              summary: Exact hostname search
              value: GV-RC0011-CCAP003
            hostname_wildcard:
              summary: Wildcard hostname search
              value: CCAP*
            ip_exact:
              summary: Exact IP search
              value: 192.168.1.100
            ip_wildcard:
              summary: Wildcard IP search
              value: 192.168.1.*
        - name: api_key
          in: query
          required: false
          description: API key for authentication (can also be provided via X-API-Key header)
          schema:
            type: string
          example: dev-key-12345
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  search_type:
                    type: string
                    example: hostname
                  query:
                    type: string
                    example: CCAP*
                  count:
                    type: integer
                    example: 8
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Device'
              examples:
                hostname_search:
                  summary: Hostname search result
                  value:
                    status: 200
                    search_type: hostname
                    query: "CCAP*"
                    count: 2
                    data:
                      - id: 1
                        hostname: "GV-RC0011-CCAP003"
                        ip_address: "192.168.1.100"
                        description: "CCAP Server 003"
                        device_type: "server"
                        status: "active"
                        location: "Datacenter A"
                        created_at: "2024-01-15 10:30:00"
                        updated_at: "2024-01-15 10:30:00"
                ip_search:
                  summary: IP address search result
                  value:
                    status: 200
                    search_type: ip
                    query: "192.168.1.*"
                    count: 4
                    data:
                      - id: 1
                        hostname: "GV-RC0011-CCAP003"
                        ip_address: "192.168.1.100"
                        description: "CCAP Server 003"
                        device_type: "server"
                        status: "active"
                        location: "Datacenter A"
                        created_at: "2024-01-15 10:30:00"
                        updated_at: "2024-01-15 10:30:00"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                missing_params:
                  summary: Missing required parameters
                  value:
                    error: "Missing required parameters: type and q"
                    status: 400
                    usage:
                      hostname_search: "/api/search?type=hostname&q=GV-RC0011-CCAP003&api_key=your-key"
                      hostname_wildcard: "/api/search?type=hostname&q=CCAP*&api_key=your-key"
                      ip_search: "/api/search?type=ip&q=192.168.1.100&api_key=your-key"
                      ip_wildcard: "/api/search?type=ip&q=192.168.1.*&api_key=your-key"
                invalid_hostname:
                  summary: Invalid hostname format
                  value:
                    error: "Invalid hostname format. Expected: 4char-2char4num-CCAPxxx or CCAP* for wildcard"
                    example: "GV-RC0011-CCAP003"
                    wildcard_example: "CCAP*"
                    status: 400
                invalid_ip:
                  summary: Invalid IP format
                  value:
                    error: "Invalid IP address format"
                    example: "192.168.1.100"
                    wildcard_example: "192.168.1.*"
                    status: 400
                invalid_type:
                  summary: Invalid search type
                  value:
                    error: "Invalid search type. Supported types: hostname, ip"
                    status: 400
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Invalid or missing API key"
                status: 401
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Internal server error: Database connection failed"
                status: 500

  /api/health:
    get:
      summary: Health check
      description: Check the health status of the API
      operationId: healthCheck
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-07-18 14:30:00"
                  version:
                    type: string
                    example: "1.0.0"

  /:
    get:
      summary: API information
      description: Get basic information about the API and available endpoints
      operationId: getApiInfo
      security: []
      responses:
        '200':
          description: API information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ISW CMDB API"
                  version:
                    type: string
                    example: "1.0.0"
                  endpoints:
                    type: object
                    properties:
                      search:
                        type: string
                        example: "/api/search?type={hostname|ip}&q={query}&api_key={key}"
                      health:
                        type: string
                        example: "/api/health"
                  examples:
                    type: object
                    properties:
                      hostname_exact:
                        type: string
                        example: "/api/search?type=hostname&q=GV-RC0011-CCAP003&api_key=your-key"
                      hostname_wildcard:
                        type: string
                        example: "/api/search?type=hostname&q=CCAP*&api_key=your-key"
                      ip_exact:
                        type: string
                        example: "/api/search?type=ip&q=192.168.1.100&api_key=your-key"
                      ip_wildcard:
                        type: string
                        example: "/api/search?type=ip&q=192.168.1.*&api_key=your-key"

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      description: HTTP Basic Authentication with username and password

  schemas:
    Device:
      type: object
      properties:
        id:
          type: integer
          description: Unique device identifier
          example: 1
        hostname:
          type: string
          description: Device hostname
          example: "GV-RC0011-CCAP003"
        ip_address:
          type: string
          description: Device IP address
          example: "192.168.1.100"
        description:
          type: string
          description: Device description
          example: "CCAP Server 003"
        device_type:
          type: string
          enum: [server, network, storage, other]
          description: Type of device
          example: "server"
        status:
          type: string
          enum: [active, inactive, maintenance]
          description: Current device status
          example: "active"
        location:
          type: string
          description: Physical location of the device
          example: "Datacenter A"
        created_at:
          type: string
          format: date-time
          description: Timestamp when the device was created
          example: "2024-01-15 10:30:00"
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the device was last updated
          example: "2024-01-15 10:30:00"

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        status:
          type: integer
          description: HTTP status code
      required:
        - error
        - status

tags:
  - name: Search
    description: Device search operations
  - name: Health
    description: API health and status operations
